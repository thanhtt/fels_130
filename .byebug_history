continue
builder.object
builder
buider
continue
lesson
lesson.nil?
continue
lesson.nil?
lesson
continue
lesson.nil?
lesson.finished?
lesson
continue
word.answers.first.content
word.answers.first.name
word.answers
word
exit
continue
words.size
self.words = self.course.words.order("RANDOM()").limit Settings.number_words_per_lesson
self.words = self.course.words.order("RANDOM()").
   16:       limit Settings.number_words_per_lesson
self.course.words.order("RANDOM()").
   16:       limit
self.course.words.order("RANDOM()").
Settings.number_words_per_lesson
continue
@course
continue
course.lessons.first
course.lessons
@lessons
continue
params[:course_id].blank?
params[:course_id]
@words = if params[:course_id].blank?
if params[:course_id].blank?
continue
Word.send (params[:option] ||= "all_words")
params[:course_id].blank?
continue
if params[:courses_id].blank?
continue
params[:course_id].blank?
if params[:course_id].blank?
continue
@words.paginate page: params[:page]
Course.find_by id: params[:courses_id]
continue
@courses.words.send (params[:option] ||= "all_words")
Courses.find_by id: params[:courses_id]
continue
Courses.find_by id: params[:coures_id]
continue
Course.find_by id: params[:coures_id]
continue
Word.send (params[:option] ||= "all_words"), current_user.id
params[:coures_id].blank?
continue
unless params[:coures_id].blank?
continue
params[:coures_id].blank?
@courses = Course.find_by id: params[:coures_id]
Word.send (params[:option] ||= "all_words"), current_user.id
 @words = if params[:coures_id].blank?
continue
if course_id.present?
continue
if params[:courses_id].blank?
@courses = Course.all
@words = Word.send (params[:option] ||= "all_words"), current_user.id
continue
 @words = if params[:coures_id].blank?
params
continue
User.is_user? @user, current_user
continue
User.is_user? User.first
User.is_user? User.second
User.is_user? User.sencond
User.is_user? current_user
continue
User.first
User
continue
current_user.is_user? @user
continue
@user
current_user
current_user.is_user? @user
continue
current_user
@user
continue
self
continue
